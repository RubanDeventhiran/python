Python Short Notes:

                    Quick Reference:

List - index level operation - List comprehension 
enumerate keyword - used for taking the index and keyword of a list, Tuples (Not used for Sets and Dictionaries)

                          String: 
Title
name = "ada lovelace"
print(name.title())
Save this file as name.py, and then run it. You should see this output:
Ada Lovelace

name = "Ada Lovelace"
print(name.upper())
print(name.lower())

              Removing empty spaces in a string

>>> favorite_language = ' python '
v >>> favorite_language.rstrip()
' python'
w >>> favorite_language.lstrip()
'python '
x >>> favorite_language.strip()
'python'

              Modifying Elements in a List

motorcycles = ['honda', 'yamaha', 'suzuki']
print(motorcycles)
motorcycles[0] = 'ducati'
print(motorcycles)

              Adding Elements to a List
              

motorcycles = ['honda', 'yamaha', 'suzuki']
print(motorcycles)
motorcycles.append('ducati')
print(motorcycles)
The append() method at u adds 'ducati' to the end of the list without
affecting any of the other elements in the list:
['honda', 'yamaha', 'suzuki']
['honda', 'yamaha', 'suzuki', 'ducati']

            Inserting Elements into a List


motorcycles = ['honda', 'yamaha', 'suzuki']
motorcycles.insert(0, 'ducati')
print(motorcycles)

In this example, the code at u inserts the value 'ducati' at the beginning
of the list. The insert() method opens a space at position 0 and stores
the value 'ducati' at that location. This operation shifts every other value
in the list one position to the right:

['ducati', 'honda', 'yamaha', 'suzuki']


            Removing Elements from a List

Removing an Item Using the del Statement

It removed by the index id.

motorcycles = ['honda', 'yamaha', 'suzuki']
print(motorcycles)
del motorcycles[0]
print(motorcycles)


Removing an Item Using the pop() Method

It removes and returns the removed item in a list.

In a web application, you might want to remove a user from a list of active members
and then add that user to a list of inactive members.


motorcycles = ['honda', 'yamaha', 'suzuki']
print(motorcycles)
popped_motorcycle = motorcycles.pop()
print(motorcycles)
print(popped_motorcycle)

o/p:
['honda', 'yamaha', 'suzuki']
['honda', 'yamaha']
suzuki

Popping Items from any Position in a List

first_owned = motorcycles.pop(0)
print('The first motorcycle I owned was a ' + first_owned.title() + '.')

o/p:
The first motorcycle I owned was a Honda.

Removing an Item by Value


motorcycles = ['honda', 'yamaha', 'suzuki', 'ducati']
print(motorcycles)
motorcycles.remove('ducati')
print(motorcycles)

o/p:
['honda', 'yamaha', 'suzuki', 'ducati']
['honda', 'yamaha', 'suzuki']


Sorting in List

cars = ['bmw', 'audi', 'toyota', 'subaru']
cars.sort()
print(cars)

o/p:
['audi', 'bmw', 'subaru', 'toyota']

cars = ['bmw', 'audi', 'toyota', 'subaru']
cars.sort(reverse=True)
print(cars)

o/p:
['toyota', 'subaru', 'bmw', 'audi']



Sorting a List Temporarily with the sorted() Function also support reverse=True parameter

print("Here is the original list:")
print(cars)
print("\nHere is the sorted list:")
print(sorted(cars))
print("\nHere is the original list again:")
print(cars)

o/p:

Here is the original list:
['bmw', 'audi', 'toyota', 'subaru']
Here is the sorted list:
['audi', 'bmw', 'subaru', 'toyota']
Here is the original list again:
['bmw', 'audi', 'toyota', 'subaru']


          Printing a List in Reverse Order (No alphabetical only the index order)

cars = ['bmw', 'audi', 'toyota', 'subaru']
print(cars)
cars.reverse()
print(cars)
Notice that reverse() doesn’t sort backward alphabetically; it simply
reverses the order of the list:

o/p:
['bmw', 'audi', 'toyota', 'subaru']
['subaru', 'toyota', 'audi', 'bmw']


          Finding the Length of a List


>>> cars = ['bmw', 'audi', 'toyota', 'subaru']
>>> len(cars)
4

Python counts the items in a list starting with one, so you shouldn’t run into any offby-
one errors when determining the length of a list.


                Chapter 4         Working with Lists



